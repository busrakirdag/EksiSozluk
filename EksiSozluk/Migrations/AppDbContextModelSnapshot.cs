// <auto-generated />
using System;
using EksiSozluk;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EksiSozluk.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EksiSozluk.Baslik", b =>
                {
                    b.Property<int>("BaslikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaslikAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Başlık");

                    b.Property<int>("KonID")
                        .HasColumnType("int");

                    b.HasKey("BaslikID");

                    b.HasIndex("KonID");

                    b.ToTable("Başlıklar");
                });

            modelBuilder.Entity("EksiSozluk.Entry", b =>
                {
                    b.Property<int>("EntryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BaslkID")
                        .HasColumnType("int");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("İçerik");

                    b.Property<int>("KullancID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("EntryID");

                    b.HasIndex("BaslkID");

                    b.HasIndex("KullancID");

                    b.ToTable("Entry");
                });

            modelBuilder.Entity("EksiSozluk.Konu", b =>
                {
                    b.Property<int>("KonuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KonuAdi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KonuID");

                    b.ToTable("Konular");
                });

            modelBuilder.Entity("EksiSozluk.Kullanici", b =>
                {
                    b.Property<int>("KullaniciID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Kullanıcı Adı");

                    b.HasKey("KullaniciID");

                    b.ToTable("Kullanıcılar");
                });

            modelBuilder.Entity("EksiSozluk.Baslik", b =>
                {
                    b.HasOne("EksiSozluk.Konu", "Konu")
                        .WithMany("Baslik")
                        .HasForeignKey("KonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Konu");
                });

            modelBuilder.Entity("EksiSozluk.Entry", b =>
                {
                    b.HasOne("EksiSozluk.Baslik", "Baslik")
                        .WithMany("Entry")
                        .HasForeignKey("BaslkID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EksiSozluk.Kullanici", "Kullanici")
                        .WithMany("Entry")
                        .HasForeignKey("KullancID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Baslik");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("EksiSozluk.Baslik", b =>
                {
                    b.Navigation("Entry");
                });

            modelBuilder.Entity("EksiSozluk.Konu", b =>
                {
                    b.Navigation("Baslik");
                });

            modelBuilder.Entity("EksiSozluk.Kullanici", b =>
                {
                    b.Navigation("Entry");
                });
#pragma warning restore 612, 618
        }
    }
}
